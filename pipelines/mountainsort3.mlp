{"processing_server":"river","pipelines":[{"spec":{"name":"main","description":"","inputs":[],"outputs":[],"parameters":[]},"steps":[],"input_files":[],"output_files":[]},{"name":"sort","script":"/* Define the spec */\ninputs_opt('raw','filt','pre','geom');\noutputs('firings_out');\noutputs_opt('filt_out','pre_out');\nparam('samplerate',30000);\nparam('freq_min',300);\nparam('freq_max',6000);\nparam('freq_wid',1000);\nparam('whiten','true');\nparam('detect_threshold',3);\nparam('detect_sign',0);\nparam('adjacency_radius',0);\n      \n\n_Pipeline.run=function(X) {\n  var pp=X.parameters;\n  \n  var pre='pre';\n  if (!X.hasInput('pre')) {\n    \n    var filt='filt';\n    if (!X.hasInput('filt')) {\n      if (!X.hasInput('raw')) {\n        console.error('Missing input: raw, filt or pre');\n        return -1;\n      }\n      X.runProcess('ms3.bandpass_filter',\n                   {timeseries:'raw'},\n                   {timeseries_out:'filt_out'},\n                   {samplerate:pp.samplerate,freq_min:pp.freq_min,freq_max:pp.freq_max,freq_wid:pp.freq_wid}\n                  );\n      filt='filt_out';\n    }\n  \n  \n    if (pp.whiten=='true') {\n      X.runProcess('ms3.whiten',\n                   {timeseries:filt},\n                   {timeseries_out:'pre_out'},\n                   {}\n                  );\n    }\n    else {\n      X.runProcess('pyms.normalize_channels',\n                   {timeseries:'filt'},\n                   {timeseries_out:'pre_out'},\n                   {}\n                  );\n    }\n    pre='pre_out';\n  }\n  \n  var p={\n    detect_threshold:pp.detect_threshold,\n    detect_sign:pp.detect_sign,\n    adjacency_radius:pp.adjacency_radius\n  };\n  var geom='';\n  if (X.hasInput('geom')) {\n    geom='geom';\n    p.adjacency_radius=pp.adjacency_radius;\n  }\n  X.runProcess('mountainsortalg.ms3',\n               {timeseries:pre},\n               {firings_out:'firings_out'},\n               p);\n               \n};\n\n/////////////////////////////////////////////////////////////////////\n\n\nfunction param(str,val) {\n      if (val===undefined) {\n        _Pipeline.spec.parameters.push({name:str});\n      }\n      else {\n        _Pipeline.spec.parameters.push({name:str,optional:true,default_value:val});\n      }\n}\n                \nfunction inputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1});\n  if (str2) _Pipeline.spec.inputs.push({name:str2});\n  if (str3) _Pipeline.spec.inputs.push({name:str3});\n  if (str4) _Pipeline.spec.inputs.push({name:str4});\n}\n\nfunction inputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.inputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.inputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.inputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.inputs.push({name:str4,optional:true});\n}\n\nfunction outputs(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1});\n  if (str2) _Pipeline.spec.outputs.push({name:str2});\n  if (str3) _Pipeline.spec.outputs.push({name:str3});\n  if (str4) _Pipeline.spec.outputs.push({name:str4});\n}\n\nfunction outputs_opt(str1,str2,str3,str4) {\n  if (str1) _Pipeline.spec.outputs.push({name:str1,optional:true});\n  if (str2) _Pipeline.spec.outputs.push({name:str2,optional:true});\n  if (str3) _Pipeline.spec.outputs.push({name:str3,optional:true});\n  if (str4) _Pipeline.spec.outputs.push({name:str4,optional:true});\n}","steps":[],"spec":{"name":"","description":"","inputs":[],"outputs":[],"parameters":[]}}],"input_files":[],"output_files":[],"jobs":[]}